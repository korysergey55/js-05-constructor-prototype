///////////////////////////////////////////////////////////////

// 3 - –ó–∞–º–µ—Ç–∫–∏
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Notes –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π
// –∑–∞–º–µ—Ç–æ–∫ –≤ —Å–≤–æ–π—Å—Ç–≤–µ notes, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–ª–∞—Å—Å–∞.
// –ó–∞–º–µ—Ç–∫–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ text –∏ priority.
// –î–æ–±–∞–≤—å –∫–ª–∞—Å—Å—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ PRIORITY,
// –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

// {
//   LOW: 'low',
//   NORMAL: 'normal',
//   HIGH: 'high'
// }

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã addNote(note), removeNote(text)
// –∏ updateNotePriority(text, newPriority).

// class Notes {
//   static PRIORITY = {
//     LOW: 'low',
//     NORMAL: 'normal',
//     HIGH: 'high',
//   };

//   constructor(notes) {
//     this.notes = notes;
//   }

//   addNote(note) {
//     this.notes.push(note);
//   }

//   removeNote(text) {
//     const updatedNotes = [];

//     for (const note of this.notes) {
//       if (note.text !== text) {
//         updatedNotes.push(note);
//       }
//     }

//     this.notes = updatedNotes;
//   }

//   updateNotePriority(text, newPriority) {
//     console.log(this.notes);
//     for (let note of this.notes) {
//       if (note.text === text) {
//         note.priority = newPriority;
//       }
//     }
//   }
// }

// const myNotes = new Notes([]);

// console.log(myNotes);

// myNotes.addNote({
//   text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞',
//   priority: Notes.PRIORITY.LOW,
// });

// // console.dir(myNotes.notes);

// myNotes.addNote({
//   text: '–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞',
//   priority: Notes.PRIORITY.NORMAL,
// });

// myNotes.addNote({
//   text: '–ú–æ—è —Ç—Ä–µ—Ç—å—è –∑–∞–º–µ—Ç–∫–∞',
//   priority: Notes.PRIORITY.NORMAL,
// });

// // console.table(myNotes.notes);

// // myNotes.removeNote('–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞');
// // console.table(myNotes.notes);

// myNotes.updateNotePriority('–ú–æ—è –≤—Ç–æ—Ä–∞—è –∑–∞–º–µ—Ç–∫–∞', Notes.PRIORITY.HIGH);
// console.table(myNotes.notes);

//////////////////////////////////////////////////////////////////////////

// 4 - –ö–ª–∏–µ–Ω—Ç
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Client –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç
// —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ login –∏ email.
// login –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–æ–º, –∞ email –ø—É–±–ª–∏—á–Ω—ã–º
// –¥–æ—Å—Ç—É–ø –∫ –Ω–∏–º —Å–¥–µ–ª–∞–π —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä login –∏ email.
// –µ—Å–ª–∏ —Å–µ—Ç—Ç–µ—Ä –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—É—á–∏–ª –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å 'No login!'
// –µ—Å–ª–∏ —Å–µ—Ç—Ç–µ—Ä –∏–º–µ–π–ª–∞ –ø–æ–ª—É—á–∏–ª —Å—Ç—Ä–æ–∫—É 'fake@email' - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å 'Fake email!'

// class Client {
//   #login;
//   _email;

//   constructor({ login, email }) {
//     this.#login = login;
//     this._email = email;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(value) {
//     if (!value) {
//       return console.log('No login!');
//     }

//     this.#login = value;
//   }

//   get email() {
//     return this._email;
//   }

//   set email(value) {
//     if (value === 'fake@email') {
//       return console.log('Fake email!');
//     }

//     this._email = value;
//   }
// }

// const mango = new Client({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log('üöÄ  mango', mango);

// console.log(mango.email); // mango@dog.woof
// // console.log(mango._email); //
// mango.email = 'fake@email';
// console.log(mango.email); // mango@dog.woof
// mango.email = 'nofake@email';
// console.log(mango.email); // nofake@email

// console.log(mango.login); // Mango
// // console.log(mango.#login); // Error
// mango.login = 'Mangodog';
// console.log(mango.login); // Mangodog
// mango.login = '';
// console.log(mango.login); // Mangodog

// const poly = new Client({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie

///////////////////////////////////////////////////////////////////////////////////

// –ü—Ä–∏–º–µ—Ä 5 - –ø–µ—Ä–µ–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã User, Student
// —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–ª–∞—Å—Å–æ–≤

// const User = function (name, surname) {
//   this.name = name;
//   this.surname = surname;
// };

// User.prototype.getFullName = function () {
//   return `${this.name} ${this.surname}`;
// };

// const Student = function (name, surname, year) {
//   User.apply(this, [name, surname]);

//   this.year = year;
// };

// Student.prototype = Object.create(User.prototype);
// Student.prototype.constructor = Student;

// Student.prototype.getCourse = function () {
//   const now = new Date();
//   const course = now.getFullYear() - this.year;
//   return course;
// };

///////////////////

// class User {
//   name;
//   surname;

//   constructor({ name, surname }) {
//     this.name = name;
//     this.surname = surname;
//   }

//   getFullName() {
//     return `${this.name} ${this.surname}`;
//   }
// }

// class Student extends User {
//   year;

//   constructor({ name, surname, year }) {
//     super({ name, surname });

//     this.year = year;
//   }

//   getCourse() {
//     const course = 2021 - this.year;
//     return course;
//   }
// }

// const student = new Student({ name: '–ü–µ—Ç—Ä–æ', surname: '–®–µ–≤—á–µ–Ω–∫–æ', year: 2018 });

// console.log(student);
// console.log(student.getFullName()); //–≤—ã–≤–µ–¥–µ—Ç '–ü–µ—Ç—Ä–æ –®–µ–≤—á–µ–Ω–∫–æ'
// console.log(student.year); //–≤—ã–≤–µ–¥–µ—Ç 2018
// console.log(`${student.getCourse()}-–π –∫—É—Ä—Å`); //–≤—ã–≤–µ–¥–µ—Ç 3 - —Ç—Ä–µ—Ç–∏–π –∫—É—Ä—Å, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–∫—É—â–∏–π –≥–æ–¥ 2021

///////////////////////////////////////////////////////////////////////
